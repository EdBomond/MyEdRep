from typing import Tuple
import matplotlib as plt
import math
from math import log
import time
from colorama import init, Fore

# Кожухотрубчатый конденсатор

# Параметры сред
# Пар - в межтрубное пространство
# Четыреххлористый углерод - в трубное пространство

print("Программа для расчёта ТО для пара в межтрубном пространстве и бензола в трубном пространстве")
print()

#холодный теплоноситель(четыреххлористый углерод)
t_list=[0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150]
p_1=[1628,1611,1593,1574,1558,1537,1518,1498,1478,1457,1437,1415,1393,1370,1347,1323]
c_1=[0.85,0.85,0.86,0.86,0.86,0.87,0.88,0.89,0.91,0.94,0.98,1.03,1.09,1.17,1.25,1.36]
m_1=[1332,1133,973.9,845,739.4,652.1,579.2,517.8,465.7,421.1,382.8,349.5,320.5,295.1,272.7,252.9]
l_1=[105,103,101,98.7,96.7,94.7,92.7,90.7,88.7,86.7,84.8,82.8,80.8,78.8,76.8,74.8]
#горячий теплоноситель (насыщенный водяной пар)
p_2=[4.85,9.40,17.29,30.36,51.15,83.02,130.2,198.2,293.3,423.5,597.7,826.3,1122,1496,1966,2547]
c_2=[4.218,4.193,4.182,4.178,4.179,4.181,4.184,4.189,4.196,4.205,4.217,4.230,4.245,4.264,4.286,4.311]
m_2=[1786.5,1304.4,1003.5,800.7,652.7,548.8,469.4,405.7,354.8,314.6,282.2,258.7,237.6,217.6,200.9,186.2]
l_2=[551.3,575.6,599,618,634,648,659,668,675,680,683,685,686,686,685,684]

#  Константы
K = 120  # Приблизительный коэффициент теплопередачи от бензола к воде Вт/(м×К)
Re_approx = 15000  # Условное значение числа Рейнольдса
term_conductivity_dirty_pipe_outside = 1/2900   # Теплопроводность загрязнений стенок труб с внутренней стороны
term_conductivity_dirty_pipe_inside = 1/5800  # Теплопроводность загрязнений стенок труб с внешней стороны
const_term_conductivity_steelPipe = 17.5  # Коэффициент теплопроводности стенки из стали, Вт/(м ×К)

t_start_par = float(input('Введите начальную температуру теплоносителя в межтрубном пространстве (Пар) в град. Цельсия: '))  # Начальная температура воды
t_fin_par = float(input('Введите конечную температуру теплоносителя в межтрубном пространстве (Пар) в град. Цельсия: '))   # Конечная температура воды
t_start_ccl4 = float(input('Введите начальную температуру теплоносителя в трубном пространстве (Четыреххлористый углерод) в град. Цельсия: '))  # Начальная температура бензола
t_fin_ccl4 = float(input('Введите конечную температуру теплоносителя в трубном пространстве (Четыреххлористый углерод) в град. Цельсия: '))   # Конечная температура бензола
G1 = float(input('Введите расход жидкости (Четыреххлористого углерода) в трубном пространстве, т/ч. Если расход неизвестен введите 0: '))  # Т/ч  # Расход бензола Т/ч
G2 = float(input('Введите расход жидкости (пара) в межтрубном пространстве, т/ч. Если расход неизвестен введите 0: '))

intermediate_data = int(input("Выводить ли промежуточные расчёты? Вывести все данные - 1, Вывести основные данные - 2, Не выводить - 3: "))

# ------------------------------------
# Данные для отладки
# Данные для отладки
# Данные для отладки

#холодный теплоноситель (четыреххлористый углерод)
tn1=25
tk1=95
G1=23000/3600
#горячий теплоноситель (насыщенный водяной пар)
tn2=115
tk2=115
G2=398027.778/22210002
G2=1
G1=0
# -------------------------------------

#средняя температура
ts2 = 0.5*(tn2+tk2)
delta_tb=abs(tn2-tn1)
delta_tm=abs(tk2-tk1)
delta_ts=((delta_tb-delta_tm)/(log(delta_tb/delta_tm)))
ts1 = 0/5*(tk1+tn1)
for i in range (0, (len(t_list)-1)):
    if ts1==t_list[i]:
        p1 = p_1[i]
        c1= c_1[i]
        m1=m_1[i]
        l1=l_1[i]
    else:
        if (ts1>t_list[i]) and (ts1<t_list[i+1]):
            p1=p_1[i] + ((p_1[i+1]-p_1[i])/(t_list[i+1]-t_list[i]))*(ts1-t_list[i])
            c1=c_1[i] + ((c_1[i+1]-c_1[i])/(t_list[i+1]-t_list[i]))*(ts1-t_list[i])
            m1=m_1[i] + ((m_1[i+1]-m_1[i])/(t_list[i+1]-t_list[i]))*(ts1-t_list[i])
            l1=l_1[i] + ((l_1[i+1]-l_1[i])/(t_list[i+1]-t_list[i]))*(ts1-t_list[i])
for i in range (0, (len(t_list)-1)):
    if ts2==t_list[i]:
        p2 = p_2[i]
        c2= c_2[i]
        m2=m_2[i]
        l2=l_2[i]
    else:
        if (ts2>t_list[i]) and (ts2<t_list[i+1]):
            p2=p_2[i]+((p_2[i+1]-p_2[i])/(t_list[i+1]-t_list[i]))*(ts2-t_list[i])
            c2=c_2[i]+((c_2[i+1]-c_2[i])/(t_list[i+1]-t_list[i]))*(ts2-t_list[i])
            m2=m_2[i]+((m_2[i+1]-m_2[i])/(t_list[i+1]-t_list[i]))*(ts2-t_list[i])
            l2=l_2[i]+((l_2[i+1]-l_2[i])/(t_list[i+1]-t_list[i]))*(ts2-t_list[i])

#  Функция расчёта парметров выбранного аппарата
def calc_TO(F, n_z, i_d, o_d, S, depth_pipe, ccl4_viscous, par_viscous, par_heat_capacity, par_therm_conductivity,
            ccl4_heat_capacity, ccl4_therm_conductivity, G_ccl4, intermediate_data, n):

    # Значение Рейнольдса для трубного пространства
    global Nu_ccl4
    Re_ccl4 = round((4*G1/(3.14*i_d*n_z*m1*10**-6)), 2)

    # Прандтль для трубного пространства
    Pr_ccl4 = round(c1*10**3*m1*10**-6/(l1*10**-3), 2)

    # Число Нуссельта

    Nu_ccl4 = 0.023 * (Re_ccl4 ** 0.8) * (Pr_ccl4 ** 0.4)
# Коэффициент теплоотдачи от жидкости внутри труб к стенке
    alfa_ccl4 = round((Nu_ccl4*l1*10**-3)/i_d, 2)

    # Значение Рейнольдса для межтрубного пространства
    Re_par = round((G2 * o_d) / (S * par_viscous), 2)

    # Коэффициент теплоотдачи от труб к жидкости в межтрубном пространстве (вода)
    alfa_par = round(3.78*l2*10**-3*((p2**2*o_d*n)/(m2*10**-6*G2))**(1/3), 2)

    # Суммарное термическое сопротивление
    sum_term_resist_steelPipe = 0.00063

    # Коэффициент теплопередачи
    K = round(1 / (1/alfa_par + sum_term_resist_steelPipe + 1/alfa_ccl4), 2)

    if intermediate_data == 1 or intermediate_data == 2:
        print()
        print("~ Число Рейнольдса для трубного пространства =", Re_ccl4)
        # if 2300 < Re_benz < 15000:
        #    print(
        #        "Так как число Рейнольдса менее 15000 дальнейший расчёт должен производиться исходя из графика.
        #        Программа закроется через 10 секунд")
        #    time.sleep(10)
        #    exit()
        print("~ Число Прандтля для трубного пространства =", Pr_ccl4)
        # print()
        print("~ Коэффициент теплоотдачи от жидкости внутри труб к стенке =", alfa_ccl4)
        # print()
        print("~ Значение Рейнольдса для межтрубного пространства =", Re_par)
        # print()
        print("~ Коэффициент теплоотдачи от труб к жидкости в межтрубном пространстве (пар) =", alfa_par)
        # print()
        print("~ Коэффициент теплопередачи =", K)
    return K

# Расчёт тепловой нагрузки аппарата и расход воды


if intermediate_data == 1:
    print()
    print()
    print("Параметры среды при средней температуре=", ts2, "град.Цельсия")
    print("Теплопроводность пара =", l2)
    print("Теплоёмкость пара =", c2)
    print("Вязкость пара =", m2)
    print()
    print("Параметры среды при средней температуре =", ts1, "град.Цельсия")
    print("Теплопроводность четыреххлористого углерода при Т(четыреххлористого углерода) =", l1)
    print("Теплоёмкость четыреххлористого углерода при Т(четыреххлористого углерода) =", c1)
    print("Вязкость четыреххлористого углерода =", m1)
    print()

if G2 == 0:
    Q = round(G1*c1*(tk1-tn1), 2)
    G2 = round(Q / (c2 * abs(tk2 - tn2)), 2)

elif G1 == 0:
    Q = round(G2 * c2 * abs(tk2 - tn2), 2)
    G1 = round(Q / (c1 * abs(tk1 - tn1)), 2)

else:

    print("Необходимо ввести расход одного из теплоносителей, попробуйте ещё раз после перезапуска программы")
    print("Программа завершит работу сама через 10 секунд")
    time.sleep(10)
    exit()

if intermediate_data == 1:
    print("Расход четыреххлорстого углерода =", G1, "Кг/с")
    print("Расход пара =", G2, "Кг/с")

# Расчёт среднелогарифмичиской разницы между температурами теплоносителей и приближённого значения температуры

T_mid_log = ((tn2 - tn1) - (tk2-tk1)) / log((tn2 - tn1) / (tk2-tk1))

# Ориентировочное значение необходимой площади теплообмена
Q1=G1*c1*(tk1-tn1)
F_approximate = Q1 / (K * T_mid_log)

F_approximate = round(F_approximate, 2)

print()
print("Ориентировочное значение необходимой площади теплообмена = ", F_approximate)
print()
print("1.  D = 600 мм, dн = 25 × 2 мм, z = 2, n = 240,  n/z = 120, F = 57 м2 ")
print("2.  D = 600 мм, dн = 25 × 2 мм, z = 4, n = 206,  n/z = 51.5, F = 49 м2 ")
print("3.  D = 600 мм, dн = 25 × 2 мм, z = 6, n = 196,  n/z = 32.67, F = 46 м2 ")
print("4.  D = 600 мм, dн = 20 × 2 мм, z = 2, n = 370,  n/z = 185, F = 70 м2 ")
print("5.  D = 600 мм, dн = 20 × 2 мм, z = 4, n = 334,  n/z = 83.5, F = 63 м2 ")
print("6.  D = 600 мм, dн = 20 × 2 мм, z = 6, n = 316, n/z = 52.67, F = 60 м2")
print("7.  D = 800 мм, dн = 25 × 2 мм, z = 4, n = 404,  n/z = 101, F = 95 м2 ")
print("8.  D = 800 мм, dн = 25 × 2 мм, z = 6, n = 384,  n/z = 64, F = 90 м2 ")
print("9.  D = 800 мм, dн = 20 × 2 мм, z = 4, n = 638,  n/z = 159.5, F = 120 м2 ")
print("10.  D = 800 мм, dн = 20 × 2 мм, z = 6, n = 618,  n/z = 103, F = 116 м2 ")
Variant_TO = int(input("Укажите номер варианта теплообменного аппарата типа 'Кожухтрубчатый теплообменник' относительно которого будет проводиться расчёт: "))
TO={}
TO[1]=[600,2,240,57,0.021,0.025,120,0.043]
TO[2]=[600,4,206,49,0.021,0.025,51.5,0.043]
TO[3]=[600,6,196,46,0.021,0.025,32.67,0.043]
TO[4]=[600,2,370,70,0.016,0.020,185,0.048]
TO[5]=[600,4,334,63,0.016,0.020,83.5,0.048]
TO[6]=[600,6,316,60,0.016,0.020,52.67,0.048]
TO[7]=[800,4,404,95,0.021,0.025,101,0.074]
TO[8]=[800,6,384,90,0.021,0.025,64,0.074]
TO[9]=[800,4,638,120,0.016,0.020,159.5,0.078]
TO[10]=[800,6,618,116,0.016,0.020,103,0.078]

if Variant_TO in range(1,10):
   #D, z, n, F, i_d, o_d, n_z, S
   F=TO[Variant_TO][3]
   n_z=TO[Variant_TO][6]
   i_d=TO[Variant_TO][4]
   o_d=TO[Variant_TO][5]
   S=TO[Variant_TO][7]
   n=TO[Variant_TO][2]
   depth_pipe=(o_d - i_d)
   K = calc_TO(F, n_z, i_d, o_d, S, depth_pipe, m1, m2, c2, l2, c1, l1, G1, intermediate_data, n)
else:
   print("Неверный ввод, повторите попытку после перезапуска программы. Программа закроется сама через 10 секунд")
   time.sleep(10)
   exit()

# Необходима площадь теплообмена
Q1=G1*c1*(tk1-tn1)
F_required = round(Q1 / (K * T_mid_log), 2)
print()
print('Необходима площадь теплообмена для данного аппарата и данных параметров сред =', F_required, "м^2")
print()
F_stock = round(((F - F_required)/F)*100, 2)  # "Запас площади теплообмена"

if 99.9 > F_stock >= 10:
    print("Выбранный аппарат с номинальной площадью", F, "м^2 и следующими характеристиками: D =", D, "мм, dн =", o_d, "м, z =", z, ", n/z =", n_z, " обеспечивает", F_stock, "% запаса площади теплообмена")
    print(Fore.GREEN + "Данный аппарат может быть использован", Fore.RESET)
else:
    print("Выбранный аппарат с номинальной площадью", F, "м^2 и следующими характеристиками: D =", D, "мм, dн =", o_d, "м, z =", z, ", n/z =", n_z, " обеспечивает", F_stock, "% запаса площади теплообмена")
    print(Fore.RED + "Данный аппарат не может быть использован", Fore.RESET)

print()
print("Программа завершит работу сама через 20 секунд")

time.sleep(20)
exit()
